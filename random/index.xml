<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Random on My New Hugo Site</title>
    <link>https://majdarbash.github.io/random/</link>
    <description>Recent content in Random on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Apr 2019 23:14:05 +0400</lastBuildDate>
    
	<atom:link href="https://majdarbash.github.io/random/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AWS Applications</title>
      <link>https://majdarbash.github.io/2019/04/17/aws-applications/</link>
      <pubDate>Wed, 17 Apr 2019 23:14:05 +0400</pubDate>
      
      <guid>https://majdarbash.github.io/2019/04/17/aws-applications/</guid>
      <description>&lt;p&gt;</description>
    </item>
    
    <item>
      <title>HA Arhictecture: High Availability</title>
      <link>https://majdarbash.github.io/2019/04/17/ha-arhictecture-high-availability/</link>
      <pubDate>Wed, 17 Apr 2019 23:12:01 +0400</pubDate>
      
      <guid>https://majdarbash.github.io/2019/04/17/ha-arhictecture-high-availability/</guid>
      <description>&lt;p&gt;</description>
    </item>
    
    <item>
      <title>Route53</title>
      <link>https://majdarbash.github.io/2019/04/17/route53/</link>
      <pubDate>Wed, 17 Apr 2019 23:11:58 +0400</pubDate>
      
      <guid>https://majdarbash.github.io/2019/04/17/route53/</guid>
      <description>&lt;p&gt;</description>
    </item>
    
    <item>
      <title>IAM</title>
      <link>https://majdarbash.github.io/2019/04/17/iam/</link>
      <pubDate>Wed, 17 Apr 2019 23:11:56 +0400</pubDate>
      
      <guid>https://majdarbash.github.io/2019/04/17/iam/</guid>
      <description>&lt;p&gt;</description>
    </item>
    
    <item>
      <title>Databases</title>
      <link>https://majdarbash.github.io/2019/04/17/databases/</link>
      <pubDate>Wed, 17 Apr 2019 23:11:53 +0400</pubDate>
      
      <guid>https://majdarbash.github.io/2019/04/17/databases/</guid>
      <description>&lt;p&gt;</description>
    </item>
    
    <item>
      <title>Serverless</title>
      <link>https://majdarbash.github.io/2019/04/17/serverless/</link>
      <pubDate>Wed, 17 Apr 2019 23:11:51 +0400</pubDate>
      
      <guid>https://majdarbash.github.io/2019/04/17/serverless/</guid>
      <description>&lt;p&gt;</description>
    </item>
    
    <item>
      <title>S3</title>
      <link>https://majdarbash.github.io/2019/04/17/aws-certification-solution-architect-iam-s3/</link>
      <pubDate>Wed, 17 Apr 2019 23:11:01 +0400</pubDate>
      
      <guid>https://majdarbash.github.io/2019/04/17/aws-certification-solution-architect-iam-s3/</guid>
      <description>&lt;p&gt;</description>
    </item>
    
    <item>
      <title>How to build Docker Image for NGINX using Chef (chef-solo)?</title>
      <link>https://majdarbash.github.io/2017/09/30/docker-building-nginx-cookbook-in-dockerized-container/</link>
      <pubDate>Sat, 30 Sep 2017 18:38:38 +0400</pubDate>
      
      <guid>https://majdarbash.github.io/2017/09/30/docker-building-nginx-cookbook-in-dockerized-container/</guid>
      <description>&lt;p&gt;</description>
    </item>
    
    <item>
      <title>How to provision Docker Images using Chef-Solo?</title>
      <link>https://majdarbash.github.io/2017/09/30/docker-provisioning-docker-container-with-chef-solo/</link>
      <pubDate>Sat, 30 Sep 2017 18:35:27 +0400</pubDate>
      
      <guid>https://majdarbash.github.io/2017/09/30/docker-provisioning-docker-container-with-chef-solo/</guid>
      <description>&lt;p&gt;</description>
    </item>
    
    <item>
      <title>CS: Markdown</title>
      <link>https://majdarbash.github.io/2017/09/30/markdown-cheat-sheet/</link>
      <pubDate>Sat, 30 Sep 2017 00:25:45 +0400</pubDate>
      
      <guid>https://majdarbash.github.io/2017/09/30/markdown-cheat-sheet/</guid>
      <description>&lt;p&gt;</description>
    </item>
    
    <item>
      <title>CS: Docker Commands</title>
      <link>https://majdarbash.github.io/2017/09/29/docker-cheat-sheet/</link>
      <pubDate>Fri, 29 Sep 2017 23:58:24 +0400</pubDate>
      
      <guid>https://majdarbash.github.io/2017/09/29/docker-cheat-sheet/</guid>
      <description>&lt;p&gt;</description>
    </item>
    
    <item>
      <title>How to upgrade Wordpress? Best and safest way to upgrade</title>
      <link>https://majdarbash.github.io/2017/08/19/best-safest-way-upgrade-wordpress-site/</link>
      <pubDate>Sat, 19 Aug 2017 13:49:34 +0400</pubDate>
      
      <guid>https://majdarbash.github.io/2017/08/19/best-safest-way-upgrade-wordpress-site/</guid>
      <description>&lt;p&gt;</description>
    </item>
    
    <item>
      <title>Overcoming SEO challenges with AngularJS 1-based Applications</title>
      <link>https://majdarbash.github.io/2017/06/27/angularjs-seo-implications/</link>
      <pubDate>Tue, 27 Jun 2017 22:49:42 +0400</pubDate>
      
      <guid>https://majdarbash.github.io/2017/06/27/angularjs-seo-implications/</guid>
      <description>Building a completely AngularJS based frontend can be really fun. Frontend developers enjoy having complete control of the routing, views, reusability of components and&amp;nbsp;testing the frontend as a stand-alone entity. At the same time, backend developers provide the frontend app with APIs and effectively invest the time into building reliable and cleaner API structures with having a clear separation of frontend and backend.
However a lot of SEO specialists are still arguing about the impact of SEO with AngularJS.</description>
    </item>
    
    <item>
      <title>CI Pipeline: Unifying and automating code using Coding Style Fixer</title>
      <link>https://majdarbash.github.io/2017/03/15/php-coding-style-fixer/</link>
      <pubDate>Wed, 15 Mar 2017 12:39:27 +0400</pubDate>
      
      <guid>https://majdarbash.github.io/2017/03/15/php-coding-style-fixer/</guid>
      <description>This tool will automatically fix your PHP code style. You can run it manually, or set it as pre-commit hook and it will run automatically.
Installation
{% raw %}composer require friendsofphp/php-cs-fixer {% endraw %} Usage:
Default configuration will apply PSR1 and PSR2 rules. To run the default configuration:
If you would like to apply specific rules, you can set the rules argument of these command.
{% raw %}--dry-run lets you run the fixer without making changes.</description>
    </item>
    
    <item>
      <title>How to test your SSL installation?</title>
      <link>https://majdarbash.github.io/2017/02/08/testing-installed-ssl-certificate/</link>
      <pubDate>Wed, 08 Feb 2017 00:41:19 +0400</pubDate>
      
      <guid>https://majdarbash.github.io/2017/02/08/testing-installed-ssl-certificate/</guid>
      <description>You can test the installed SSL certificate using this command:
openssl s_client -connect hostname:443 -showcerts | grep &#34;^ &#34;</description>
    </item>
    
    <item>
      <title>Closer look into Learning Algorithm of a Neuron</title>
      <link>https://majdarbash.github.io/2017/01/23/learning-algorithm-neuron/</link>
      <pubDate>Mon, 23 Jan 2017 23:17:13 +0400</pubDate>
      
      <guid>https://majdarbash.github.io/2017/01/23/learning-algorithm-neuron/</guid>
      <description>[latexpage]
In perceptron model weights are changed to get a better set of weights. In multi-layer neural network this algorithm won&#39;t work and we don&#39;t use&amp;nbsp;perceptron learning algorithm.
For multi-layer nets the objective is the&amp;nbsp;actual&amp;nbsp;outputs values reaching target output values.
Linear Neurons The neuron has a real-valued output which is weighted sum of its inputs:
\begin{equation} &amp;nbsp;y = \sum_{i}{x_i w_i} = W^T X &amp;nbsp;\end{equation}
$W$ - Weight vector
$X$ - input vector</description>
    </item>
    
    <item>
      <title>First Generation of Neural Networks: Perceptrons</title>
      <link>https://majdarbash.github.io/2017/01/15/perceptrons/</link>
      <pubDate>Sun, 15 Jan 2017 23:31:43 +0400</pubDate>
      
      <guid>https://majdarbash.github.io/2017/01/15/perceptrons/</guid>
      <description>&lt;p&gt;We will look into how perceptrons are structured and what they actually do. Perceptrons are the first generation of neural networks. Research on perceptrons was conducted since 1960s.&lt;/p&gt;
&lt;p&gt;</description>
    </item>
    
    <item>
      <title>How to download the streaming m3u8 videos formats?</title>
      <link>https://majdarbash.github.io/2016/12/05/downloading-m3u8-videos/</link>
      <pubDate>Mon, 05 Dec 2016 00:12:32 +0400</pubDate>
      
      <guid>https://majdarbash.github.io/2016/12/05/downloading-m3u8-videos/</guid>
      <description>Ubuntu: sudo apt-get install ffmpeg ffmpeg -i http://.../playlist.m3u8 -c copy -bsf:a aac_adtstoasc output.mp4 Mac: brew install ffmpeg ffmpeg -i http://.../playlist.m3u8 -c copy -bsf:a aac_adtstoasc output.</description>
    </item>
    
    <item>
      <title>React Native: Building the &#34;Shoes&#34; App</title>
      <link>https://majdarbash.github.io/2016/10/20/react-native-the-shoe-app/</link>
      <pubDate>Thu, 20 Oct 2016 10:18:13 +0400</pubDate>
      
      <guid>https://majdarbash.github.io/2016/10/20/react-native-the-shoe-app/</guid>
      <description>&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;I was recently experimenting building a react native app. After&amp;nbsp;digging a bit deeper into hybrid development, I have got attracted to the concept of producing a native code, in contrast to the web view approach in most of hybrid apps.&lt;/p&gt;
&lt;p&gt;So here&#39;s what we&#39;ve got. Setting it up:&lt;/p&gt;
&lt;p&gt;If you go to &lt;a href=&#34;https://facebook.github.io/react-native/docs/getting-started.html&#34;&gt;https://facebook.github.io/react-native/docs/getting-started.html&lt;/a&gt;&amp;nbsp;you&#39;ll get some instructions how to set it up.&lt;/p&gt;
&lt;h2&gt;Android installation&lt;/h2&gt;
&lt;ul&gt;
 &lt;li&gt;Install JDK&lt;/li&gt;
 &lt;li&gt;Install Android SDK&lt;/li&gt;
 &lt;li&gt;Adding android SDK path to the ~/.bashrc
  &lt;ul&gt;
   &lt;li&gt;export ANDROID_HOME=/usr/local/opt/android-sdk&lt;/li&gt;
  &lt;/ul&gt;
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;JDK can be installed using this link:&lt;br /&gt;
 http://www.oracle.com/technetwork/java/javase/downloads/index-jsp-138363.html&lt;/p&gt;
&lt;p&gt;Android SDK can be installed using:&lt;br /&gt;
 brew install android-sdk&lt;/p&gt;
&lt;p&gt;After finishing these 3 steps, we would need to install some android packages.&lt;/p&gt;
&lt;p&gt;Open Android package manager:&lt;/p&gt;
&lt;pre&gt;android&lt;/pre&gt;
&lt;p&gt;These packages will be required to run the android simulator:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Android SDK Build-tools version 23.0.1&lt;/li&gt;
 &lt;li&gt;Android 6.0 (API 23)&lt;/li&gt;
 &lt;li&gt;Android Support Repository&lt;/li&gt;
 &lt;li&gt;Intel x86 Atom System Image (for Android 5.1.1 - API 22)&lt;/li&gt;
 &lt;li&gt;Intel x86 Emulator Accelerator (HAXM installer)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You would also require to download IntelHAXM.dmg file, which you can do from:&lt;/p&gt;
&lt;p&gt;https://software.intel.com/en-us/android/articles/intel-hardware-accelerated-execution-manager&lt;/p&gt;
&lt;p&gt;Run the installation file after download dmg.&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Install IntelHAXM.dmg
  &lt;ul&gt;
   &lt;li&gt;&lt;sdk&gt;/extras/intel/Hardware_Accelerated_Execution_Manager/IntelHAXM.dmg&lt;/li&gt;
   &lt;li&gt;&lt;sdk&gt; is&amp;nbsp;/usr/local/opt/android-sdk on OS X&lt;/li&gt;
  &lt;/ul&gt;
 &lt;/li&gt;
 &lt;li&gt;To check that configuration is done correctly
  &lt;ul&gt;
   &lt;li&gt;kextstat | grep intel&lt;/li&gt;
  &lt;/ul&gt;
 &lt;/li&gt;
 &lt;li&gt;You should see message
  &lt;ul&gt;
   &lt;li&gt;com.intel.kext.intelhaxm&lt;/li&gt;
  &lt;/ul&gt;
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At this point we would like to create an android virtual device (AVD):&lt;/p&gt;
&lt;pre&gt;# launching avd manager
android avd
&lt;/pre&gt;
&lt;p&gt;Click &#34;Create&#34; and choose the following options for your AVD:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://majdarbash.github.io/wp-content/uploads/2016/09/Screen-Shot-2016-10-18-at-11.13.16-PM-e1476818078568.png&#34;&gt;&lt;img class=&#34;wp-image-418 size-large aligncenter&#34; src=&#34;https://majdarbash.github.io/wp-content/uploads/2016/09/Screen-Shot-2016-10-18-at-11.13.16-PM-1024x767.png&#34; alt=&#34;screen-shot-2016-10-18-at-11-13-16-pm&#34; width=&#34;648&#34; height=&#34;485&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now your AVD is created and you can start your emulator using:&lt;/p&gt;
&lt;pre&gt;emulator -avd &lt;avd name&gt;
# in our example: emulator -avd reactnative&lt;/pre&gt;
&lt;h2&gt;iOS installation&lt;/h2&gt;
&lt;p&gt;iOS emulator will be installed automatically as part of Xcode installation. You can install Xcode from the the app store and choose the particular emulator to start from within Xcode.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;Before proceeding let&#39;s make sure that we have the following tools in place:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;brew&lt;/li&gt;
 &lt;li&gt;android&lt;/li&gt;
 &lt;li&gt;node&lt;/li&gt;
 &lt;li&gt;watchman (brew install watchman)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Check out the &lt;a href=&#34;https://majdarbash.github.io/digging-react-native/&#34;&gt;installation post&lt;/a&gt; for more information about&amp;nbsp;how to install these tools.&lt;/p&gt;
&lt;pre&gt;# install the react native cli
npm install -g react-native-cli&lt;/pre&gt;
&lt;p&gt;Run this script to create your first app (our app is called &#34;Shoes&#34;):&lt;/p&gt;
&lt;pre&gt;react-native init Shoes&lt;/pre&gt;
&lt;p&gt;At any point throughout this tutorial, you can run your app using these commands:&lt;/p&gt;
&lt;pre&gt;# run your app on iOS
react-native run-ios
&lt;h1 id=&#34;run-your-app-on-android&#34;&gt;run your app on Android&lt;/h1&gt;
&lt;p&gt;react-native run-android&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;It&#39;s time for fun now, let&#39;s start coding to build our beautiful shoe app !&lt;/p&gt;
&lt;h2&gt;The &#34;Shoes&#34; App&lt;/h2&gt;
&lt;p&gt;Everything is in place now, time to start the work!&lt;/p&gt;
&lt;p&gt;Let&#39;s navigate to the directory where we initialized the shoe app:&lt;/p&gt;
&lt;pre&gt;cd Shoes
&lt;h1 id=&#34;directory--listing&#34;&gt;directory  listing&lt;/h1&gt;
&lt;p&gt;ls -F&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://majdarbash.github.io/wp-content/uploads/2016/10/Screen-Shot-2016-10-19-at-10.13.29-PM.png&#34;&gt;&lt;img class=&#34;size-large wp-image-439 aligncenter&#34; src=&#34;https://majdarbash.github.io/wp-content/uploads/2016/10/Screen-Shot-2016-10-19-at-10.13.29-PM-1024x781.png&#34; alt=&#34;screen-shot-2016-10-19-at-10-13-29-pm&#34; width=&#34;648&#34; height=&#34;494&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We have got several files here. T0 give possibility to distinguish the code based on the version used, we have 2 entry scripts: index.ios.js and index.android.js which will be parsed and executed based on the corresponding app platform.&lt;/p&gt;
&lt;p&gt;</description>
    </item>
    
    <item>
      <title>Facebook For Developers - 29th September 2016, Dubai</title>
      <link>https://majdarbash.github.io/2016/09/29/facebook-developers-29th-september-2016-dubai/</link>
      <pubDate>Thu, 29 Sep 2016 13:25:20 +0400</pubDate>
      
      <guid>https://majdarbash.github.io/2016/09/29/facebook-developers-29th-september-2016-dubai/</guid>
      <description>Hi there,
Here are couple of notes for the even I attended. We had a beautiful session starting from 9.50 am talking about how to monetize and distribute the facebook apps and some open source tools. Afterwards, there was a drill down into some technical topics explored in details in sort of a workshop.
Interesting Technologies:  Facebook Analytics for App - an free tool&amp;nbsp;to track and analyze the behavior of the users within the facebook app.</description>
    </item>
    
    <item>
      <title>Accessing Docker with non-root user privileges</title>
      <link>https://majdarbash.github.io/random/accessing-docker-with-non-root-user-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/accessing-docker-with-non-root-user-privileges/</guid>
      <description>Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get http://%2Fvar%2Frun%2Fdocker.sock/v1.39/containers/json: dial unix /var/run/docker.sock: connect: permission denied
Does this error look familiar?
What is happening is that docker client is communicating with the engine using socket file. As docker service is launched using root user and socket file is accessible to every user in &amp;ldquo;docker&amp;rdquo; group, you will not be able to connect to this file from docker client executed launched with your current user access.</description>
    </item>
    
    <item>
      <title>AngularJS 1: Core concepts</title>
      <link>https://majdarbash.github.io/random/angular-js-core-concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/angular-js-core-concepts/</guid>
      <description>Core Concepts  Directives - HTML annotations that trigger Javascript behaviors Modules - Where our application components live Controllers - Where we add application behaviour Expressions - How values get displayed within the page  Module / Controller Initialization var app = angular.module(‘store’, \[\]); ng-app=&amp;quot;store&amp;quot;&amp;gt; … this way the html inside the body tag will be treated as a part of angular application
{{ expression }} - this will be evaluated using the javascript</description>
    </item>
    
    <item>
      <title>AWS CDK</title>
      <link>https://majdarbash.github.io/random/aws-cdk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/aws-cdk/</guid>
      <description>Open source software framework to model and provision your cloud application resources using familiar languages.  Supported Languages  TypeScript/Javascript Python Java C#  Workflow  Initialize CDK project: cdk init --language=typescript Write Code - code your infrastructure using one of supported languages above Synthesize - produces CloudFormation templates for the written code: cdk synth Deploy - deploys CloudFormation template as stack to your AWS account: cdk deploy  Examples Github: Creating Highly Available Network using AWS CDK + TypeScript</description>
    </item>
    
    <item>
      <title>AWS Organizations - Setting Up and Configuring User Accounts</title>
      <link>https://majdarbash.github.io/random/aws-organizations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/aws-organizations/</guid>
      <description>Setting Up Organizations on AWS Account Granting User Permissions to Access Resources Accessing Cross-Account Resources using AWS CLI Example  1. Creating AWS Accounts Hierarchy under Organization 2. Create Users and Groups in the Root Account 3. Managing Root Account User Permissions in the Child Account 4. Accessing Child Account resources using AWSCLI    Setting Up Organizations on AWS Account AWS Orgnizations provides you with an efficient way to better manage and organize your AWS accounts.</description>
    </item>
    
    <item>
      <title>CS: MySQL</title>
      <link>https://majdarbash.github.io/random/mysql-grant-privelleges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/mysql-grant-privelleges/</guid>
      <description>Couple of useful sql queries we always search about for user management in mySQL:
# creating a user in mysql CREATE USER &#39;_username_&#39;@&#39;%&#39; IDENTIFIED BY &#39;_password_&#39;; # give user select access on all tables in the database GRANT SELECT ON _database_.* TO &#39;_username_&#39;@&#39;%&#39;; # give user full access on all tables in the database GRANT ALL PRIVILLEGES ON _database_.* TO &#39;_username_&#39;@&#39;%&#39;; # grant special access to user for specific tables GRANT UPDATE ON _database_.</description>
    </item>
    
    <item>
      <title>CS: Ubuntu Commands</title>
      <link>https://majdarbash.github.io/random/some-useful-commands-for-ubuntu-terminal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/some-useful-commands-for-ubuntu-terminal/</guid>
      <description># Checking the current version of installed ubuntu OS: lsb _release -a # checking disk space usage: df -h # checking disk space usage in a directory du -hs * # changing the password of the user: passwd [username ] # listing the cronjobs: crontab -l # editing cronjobs: crontab -e # tailing logs tail -f [filePath ] # tailing last 100 lines of the log file tail -f -n 100 [filePath ] # displaying contents of the file cat [filePath ] more [filePath ] less [filePath ] # showing only lines which have the string &amp;quot;testString&amp;quot; grep &amp;quot;testString&amp;quot; [file ] # grep with OR grep &amp;quot;pattern1 |pattern2&amp;quot; [file ] # extended grep (below does the same like grep with OR, however escaping characters is not required here) grep -e &amp;quot;pattern1|pattern2&amp;quot; [file ] # egrep (same like grep -e, which is extended grep) egrep &#39;pattern1|pattern2&#39; [file ] # show location in terminal shell prompt (you can add this to ~/.</description>
    </item>
    
    <item>
      <title>Distributed Data Management Concepts</title>
      <link>https://majdarbash.github.io/random/distributed-data-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/distributed-data-management/</guid>
      <description>CAP Theorem ACID Transactions Saga Pattern  CAP Theorem &amp;ldquo;Distributed data management, raises new challenges. As a consequence of the CAP Theorem, distributed microservices architectures inherently trade off consistency for performance and need to embrace eventual consistency.&amp;rdquo; AWS Documentation
 Consistency  Every read receives the most recent write / error   Availability  Every request receives the a non-error response   Partition Tolerance  System continues to operate despite an arbitrary number of messages being dropped by the network between nodes    Network Partition Failure</description>
    </item>
    
    <item>
      <title>Event-Driven Architecture</title>
      <link>https://majdarbash.github.io/random/event-driven-architectures/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/event-driven-architectures/</guid>
      <description>Structures:
 Command Bus  Command Command Handler   Event Store Event Bus  Event Event Handler    Event-Driven Systems:
 Event Notification
Will help decouple received from the sender, however it makes it difficult to understand overall behavior of the system. Event-carried State Transfer
Decouples and reduces load from supplier by each system keeping a copy of the data it requires in its storage. Due to the fact that data is replicated, higher availability will lead to Eventual Consistency.</description>
    </item>
    
    <item>
      <title>How to accessing multiple Git accounts from the same computer using different private keys?</title>
      <link>https://majdarbash.github.io/random/accessing-multiple-github-accounts-from-one-computer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/accessing-multiple-github-accounts-from-one-computer/</guid>
      <description>In order to access multiple github accounts from one computer you need to :
 generate ssh keys add ssh keys to your github account create a configuration file to manage the separate keys update stored identities  Step 1 - Generating SSH keys:
cd ~/.ssh ssh-keygen -t rsa -C &amp;quot;[email associated with your github account #1]&amp;quot; # save it as id_rsa_git_account1 when prompted ssh-keygen -t rsa -C &amp;quot;[email associated with your github account #2]&amp;quot; # save it as id_rsa_git_account2 when prompted As the result of executing these commands, the following files will be generated:</description>
    </item>
    
    <item>
      <title>How to Backup MySQL database using Percona&#39;s innobackupex</title>
      <link>https://majdarbash.github.io/random/backing-mysql-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/backing-mysql-database/</guid>
      <description>Backup using innobackupex This script backups your database and uploads it to Amazon S3:
#!/bin/bash
timestamp=`date &amp;ldquo;+%Y-%m-%d_%H-%M-%S&amp;rdquo;`
innobackupex &amp;ndash;user=[username] &amp;ndash;password=[password] &amp;ndash;parallel=3 &amp;ndash;safe-slave-backup &amp;ndash;slave-info &amp;ndash;no-timestamp /data/backup/${timestamp}_slave innobackupex &amp;ndash;user=[username] &amp;ndash;password=[password] &amp;ndash;apply-log /data/backup/${timestamp}_slave/
tar czf /data/backup/${timestamp}_slave.tgz /data/backup/${timestamp}_slave
/usr/local/bin/aws &amp;ndash;region [region] s3 cp /data/backup/${timestamp}_slave.tgz s3://[bucket]/[backup-path]/`date &amp;ldquo;+%Y&amp;rdquo;`/`date &amp;ldquo;+%m&amp;rdquo;`/`date &amp;ldquo;+%d&amp;rdquo;`/
rm -rf /data/backup/${timestamp}_slave rm -f /data/backup/${timestamp}_slave.tgz
You can easily write this script in backup.sh and schedule a cronjob using crontab -e for performing this backup on the daily basis</description>
    </item>
    
    <item>
      <title>How to find the backlinks to your site which are indexed by Google?</title>
      <link>https://majdarbash.github.io/random/find-backlinks-for-your-site/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/find-backlinks-for-your-site/</guid>
      <description>I was trying to find backlinks for my site on google search. The best way to do this was to do a search, using the following parameters:
[your Keywords or your Sitename] -site:yoursitename.com
Basically this will located all the words which match the search terms, excluding your own site -&amp;gt; which are actually the backlinks to your site.
Publish Date: 2014-10-19
 </description>
    </item>
    
    <item>
      <title>How to measure distance between strings? What is Levenstein Distance?</title>
      <link>https://majdarbash.github.io/random/levenshtein-distance-in-mysql-measuring-distance-between-the-strings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/levenshtein-distance-in-mysql-measuring-distance-between-the-strings/</guid>
      <description>Levenshtein distance function can be used to measure distance between the strings. Smaller distance will mean that string 1 is closer to string 2. This function can be used to implement &amp;ldquo;fuzzy&amp;rdquo; text search in mySQL where you can search for records and order by levenshtein distance in ascending order. In this case the closest matches (more relevant results) will appear on top and then the less relevant ones.
DELIMITER ;; DROP FUNCTION IF EXISTS `levenshtein`;; CREATE FUNCTION `levenshtein`(s1 VARCHAR(255), s2 VARCHAR(255)) RETURNS INT(11) DETERMINISTIC BEGIN DECLARE s1_len, s2_len, i, j, c, c_temp, cost INT; DECLARE s1_char CHAR; DECLARE cv0, cv1 VARBINARY(256); SET s1_len = CHAR_LENGTH(s1), s2_len = CHAR_LENGTH(s2), cv1 = 0x00, j = 1, i = 1, c = 0; IF s1 = s2 THEN RETURN 0; ELSEIF s1_len = 0 THEN RETURN s2_len; ELSEIF s2_len = 0 THEN RETURN s1_len; ELSE WHILE j &amp;lt;= s2_len DO SET cv1 = CONCAT(cv1, UNHEX(HEX(j))), j = j + 1; END WHILE; WHILE i &amp;lt;= s1_len DO SET s1_char = SUBSTRING(s1, i, 1), c = i, cv0 = UNHEX(HEX(i)), j = 1; WHILE j &amp;lt;= s2_len DO SET c = c + 1; IF s1_char = SUBSTRING(s2, j, 1) THEN SET cost = 0; ELSE SET cost = 1; END IF; SET c_temp = CONV(HEX(SUBSTRING(cv1, j, 1)), 16, 10) + cost; IF c c_temp THEN SET c = c_temp; END IF; SET c_temp = CONV(HEX(SUBSTRING(cv1, j + 1, 1)), 16, 10) + 1; IF c c_temp THEN SET c = c_temp; END IF; SET cv0 = CONCAT(cv0, UNHEX(HEX(c))), j = j + 1; END WHILE; SET cv1 = cv0, i = i + 1; END WHILE; END IF; RETURN c; END;; DELIMITER ;  Publish Date: 2014-09-12</description>
    </item>
    
    <item>
      <title>How to properly log ClientIP on Apache2 behind Load Balancer?</title>
      <link>https://majdarbash.github.io/random/apache-configuration-logging-traffic-from-x-forwarded-for-header/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/apache-configuration-logging-traffic-from-x-forwarded-for-header/</guid>
      <description>This case will help you to log to apache server any traffic coming from the load balancer, proxy or any IDS.
LogFormat &amp;quot;%h %l %u %t &amp;quot;%r&amp;quot; %&amp;gt;s %b &amp;quot;%{Referer}i&amp;quot; &amp;quot;%{User-Agent}i&amp;quot;&amp;quot; combined LogFormat &amp;quot;%{X-Forwarded-For}i %l %u %t &amp;quot;%r&amp;quot; %&amp;gt;s %b &amp;quot;%{Referer}i&amp;quot; &amp;quot;%{User-Agent}i&amp;quot;&amp;quot; proxy SetEnvIf X-Forwarded-For &amp;quot;^.*..*..*..*&amp;quot; forwarded CustomLog ${APACHE_LOG_DIR}/access_log combined env=!forwarded CustomLog ${APACHE_LOG_DIR}/access_log proxy env=forwarded Where are Apache2 Logs? The default location of apache log files on ubuntu server apache2 installation is:</description>
    </item>
    
    <item>
      <title>How to protect directory with a password in Apache2?</title>
      <link>https://majdarbash.github.io/random/password-protect-directory-apache-configurations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/password-protect-directory-apache-configurations/</guid>
      <description>A usual scenario encountered by every web server is administrator is to password protect specific directory and all it&amp;rsquo;s resources. We need to add some lines in the configuration file where our web server / virtual host is defined. This is how we do it:
Creating the password file: (the system will ask you to enter the password which will be saved in encrypted format)
sudo htpasswd -c [filename] [username] Apache BASIC HTTP Authentication using the created password file</description>
    </item>
    
    <item>
      <title>How to run Apache2 as proxy using modproxy module?</title>
      <link>https://majdarbash.github.io/random/running-apache-2-proxy-mod_proxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/running-apache-2-proxy-mod_proxy/</guid>
      <description>One other way to fix CORS issue and prevent your API endpoints to be exposed is to configure Apache2 web server to proxy certain requests, thus making it serve the requests to different domain through the apache installation of the current domain. The other application I can think about would be to hide the web service endpoint.
In order to make apache act as a &amp;ldquo;proxy&amp;rdquo; you need to make sure that proxy_http extension is there.</description>
    </item>
    
    <item>
      <title>How to Setup Squid proxy on Ubuntu Server?</title>
      <link>https://majdarbash.github.io/random/setting-squid-proxy-on-ubuntu-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/setting-squid-proxy-on-ubuntu-server/</guid>
      <description>In order to install a proxy service on Ubuntu Server edition, please execute the following commands:
Installing Squid:
sudo aptitude -y install squid3
Editing the configuration file:
sudo vim /etc/squid3/squid.conf // add a line in order to enable global access: http_access allow all
Restart the squid to reflect the newly changed configuration settings
initctl restart squid3
As the squid is running now, you can access the proxy by setting the default port as 3128 and using the host ip address.</description>
    </item>
    
    <item>
      <title>How to solve Network IP conflict when running Docker?</title>
      <link>https://majdarbash.github.io/random/docker-network-conflicts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/docker-network-conflicts/</guid>
      <description>Sometimes docker container networks created will conflict with the network configuration you have.
To fix it, I&amp;rsquo;m using the following configuration on my local machine:
# /etc/docker/daemon.json { &amp;quot;bip&amp;quot;: &amp;quot;192.168.199.1/28&amp;quot;, &amp;quot;dns&amp;quot;: [&amp;quot;8.8.8.8&amp;quot;, &amp;quot;8.8.4.4&amp;quot;] } This configuration will limit the IP addresses of the docker containers to 192.168.199.1 CIDR block. In addition you may want to troubleshoot. This may help you identify any potential conflict between your network / DNS server addresses and your existing networks / bridges created by docker.</description>
    </item>
    
    <item>
      <title>How to transfer a Wordpress site from one domain to another?</title>
      <link>https://majdarbash.github.io/random/transferring-wordpress-one-domain-another/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/transferring-wordpress-one-domain-another/</guid>
      <description>Explanation Other than uploading your wordpress sites to the new domain, you will need to do some changes in your database. Therefore, when you want to move the wordpress website to a new domain, you will find out that existing database records are still pointing at the old domain. So how do we properly migrate our wordpress site to the new domain name?
I have seen a lot of developers going straight to the database and updating records to a new domain.</description>
    </item>
    
    <item>
      <title>htaccess : how to redirect non-www url to www</title>
      <link>https://majdarbash.github.io/random/htaccess-how-to-redirect-non-www-url-to-www/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/htaccess-how-to-redirect-non-www-url-to-www/</guid>
      <description>Place the following configuration in your .htaccess file:
RewriteEngine On RewriteCond %{HTTP_HOST} !^www\. RewriteCond %{HTTP_HOST} !=localhost RewriteRule ^(.*)$ http://www.%{HTTP_HOST}/$1 [R=301,L]
This line is placed to make sure that redirection does not occur on your localhost during the development process. You can remove this line if you want to place the .htaccess configuration directly on your production server. Otherwise you can leave it and change &amp;ldquo;localhost&amp;rdquo; to any other local web server you are running.</description>
    </item>
    
    <item>
      <title>Initial steps towards successful integration Quickbooks &amp; PHP?</title>
      <link>https://majdarbash.github.io/random/quickbooks-php-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/quickbooks-php-integration/</guid>
      <description>Integration: PHP and Quickbooks using v3-php-sdk-2.0.5
This was a bit of headache. In this article I explain how to configure your quickbooks php sdk, issues faced, fixes until successful integration.
Some useful references to accomplish php / quickbook integration using the php sdk.
- download php sdk
http://bit.ly/IppPhpSdkV3
- PHP SDK for QuickBooks V3 documentation and getting started
https://developer.intuit.com/docs/0100_accounting/0500_developer_kits/0210_ipp_php_sdk_for_quickbooks_v3
*** Trying to Integrate
After download the v3-php-sdk-2.0.5 in order to accomplish the quickbooks integration, i have faced some serious problems to be able to integrate.</description>
    </item>
    
    <item>
      <title>Installing VsFTPd on Ubuntu Server</title>
      <link>https://majdarbash.github.io/random/ubuntu-vsftpd-installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/ubuntu-vsftpd-installation/</guid>
      <description>A small tutorial on how to install vsftpd and setup a separate user.
Please follow these steps to install vsftpd service on your ubuntu machine.
# adding a new local user useradd -g ubuntu ftpuser # change the password of the new user passwd ftpuser # checking the user information id ftpuser # checking the user group groups ftpuser # changing the group of the user usermod -g ubuntu ftpuser # installing and configuring vsftpd sudo apt-get install vsftpd sudo vim /etc/vsftpd.</description>
    </item>
    
    <item>
      <title>Ionic app testing - Cross domain issues</title>
      <link>https://majdarbash.github.io/random/hybrid-app-development-testing-on-google-chrome/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/hybrid-app-development-testing-on-google-chrome/</guid>
      <description>I have encountered this issue several times while I was trying to run my hybrid mobile app on google chrome browser. In particular, an app based on ionic framework was used. Basically, I was building the HTML part of the hybrid app, using cordova and phonegap. The app is accessing the web service using jquery calls: $.ajax. The issue was that in order to test the app on my google chrome browser, I had to bypass the cross domain request restriction.</description>
    </item>
    
    <item>
      <title>LAMP Installation on Ubuntu Server</title>
      <link>https://majdarbash.github.io/random/installing-apache2-mysql-php-on-ubuntu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/installing-apache2-mysql-php-on-ubuntu/</guid>
      <description>Found it useful to include these command I&amp;rsquo;m always using whenever I need to create an ec2 instance:
sudo apt-get update sudo apt-get install apache2 sudo apt-get install libapache2-mod-php5 sudo apt-get install mysql-server libapache2-mod-auth-mysql php5-mysql # installing php / curl sudo apt-get install php5-curl other php modules sudo apt-get update sudo apt-cache search php5  Publish Date: 2014-10-04
 </description>
    </item>
    
    <item>
      <title>NodeJS 8: NPM - Package Manager</title>
      <link>https://majdarbash.github.io/random/node-js-npm-package-manager/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/node-js-npm-package-manager/</guid>
      <description>NPM - Node Package Manager : npm makes it easy for JavaScript developers to share and reuse code, and it makes it easy to update the code that you&amp;rsquo;re sharing.
The official documention is available at : http://docs.npmjs.com
https://www.npmjs.org - centralized repository of public modules
NPM modes of operation global / local - Node modules can be installed locally or globally. Global installation of modules makes them available throughout any NodeJS Application you are writing on the same system.</description>
    </item>
    
    <item>
      <title>NodeJS 8: Overview</title>
      <link>https://majdarbash.github.io/random/node-js-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/node-js-notes/</guid>
      <description>Introduction Node.js is an open source, cross-platform runtime environment for server-side and networking applications. Node.js is becoming more and more popular as NodeJS applications are written in JavaScript, and can be run within the Node.js runtime on any operating system.
The main features of Node JS area:
Event-driven / asynchronous programming
Instead of retuning values for the functions and determining the program-flow, you basically define functions that are called by the system when an interesting event occurs (event callbacks).</description>
    </item>
    
    <item>
      <title>OSI Model</title>
      <link>https://majdarbash.github.io/random/osi-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/osi-model/</guid>
      <description>7. Application 6. Presentation 5. Session 4. Transport 3. Network 2. Data Link 1. Physical  Overview:
 Stands for Open Systems Interconnection model 7-Layer Model Standardizes the communication functions of a telecommunication or computing system Conceptual model enables diverse communication systems to communicate using standard protocols  7. Application  Protocol Data Unit (PDU): Data Human-computer interaction layer, where applications can access the network services Examples: Web browsers (Chrome, Safari, IE), Apps: Skype, Zoom, Telnet, FTP  Functions of the layer:</description>
    </item>
    
    <item>
      <title>PHP - Running scripts as root</title>
      <link>https://majdarbash.github.io/random/php-running-scripts-as-root/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/php-running-scripts-as-root/</guid>
      <description>Very simple situation and very simple fix.
Whether you are using apache of php-fpm, you need to grant your web server with sudo privilege. This can be done by adding the following line to /etc/sudoers file:
apache ALL=NOPASSWD: /usr/local/bin/my_command.sh
Done !</description>
    </item>
    
    <item>
      <title>Python for Data Science</title>
      <link>https://majdarbash.github.io/random/python-for-data-science/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/python-for-data-science/</guid>
      <description>ipython - Interactive Python Interpreter
Variables  type(var_name) returns the type of the variable, e.g. float, string, &amp;hellip;  Type Conversion  str(var_name) float(var_name)  Math  Exponentiation 4**2 will give 16 Modulo 18 % 7 will give 4  Generating Output  print(string)  Publish Date: 2019-12-02
 </description>
    </item>
    
    <item>
      <title>RACI Matrix</title>
      <link>https://majdarbash.github.io/random/raci-matrix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/raci-matrix/</guid>
      <description> Responsibility assignment chart Used to assign role and responsibilities for each task, mileston, or decision on a project  RACI Stands for:
 Responsible  Team member(s) doing the work Responsible to complete the task At least 1 member   Accountable  Delegating work Last one to review the work Have only one accountable person to each task   Consulted  Review and consultation from more than one team member   Informed  Team members to be kept in the loop on project progress Doesn&amp;rsquo;t need to drill down into details of every deliverable    </description>
    </item>
    
    <item>
      <title>Remove .svn files - unverison subversion working copy</title>
      <link>https://majdarbash.github.io/random/remove-svn-files-unverison-subversion-working-copy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/remove-svn-files-unverison-subversion-working-copy/</guid>
      <description>In order to remove .svn files you need to execute the following command on your terminal:
find . -name .svn -exec rm -rf {};  Publish Date: 2015-01-02
 </description>
    </item>
    
    <item>
      <title>Review of DeployBot.com</title>
      <link>https://majdarbash.github.io/random/deploybot-com-review/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/deploybot-com-review/</guid>
      <description>There&amp;rsquo;s tons of deployment tools available these days. Deploybot.com (previously known as Dploy.io) is one of the nice tools I used since a while.
Basically the tool offered as capability to configure SSH connection to statically defined instances, perform code upload, apply configuration, run before and after install scripts and trigger other deployments. In addition they provide what they call &amp;ldquo;Atomic&amp;rdquo; deployment. This assures zero downtime and code consistency throughout the deployment nodes as the document root is switched from one release to another using softlink.</description>
    </item>
    
    <item>
      <title>SVN commands</title>
      <link>https://majdarbash.github.io/random/svn-commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/svn-commands/</guid>
      <description>Adding all un-versioned files under the current directory to the SVN:
command 1:
svn add `svn status .|grep &amp;quot;^?&amp;quot;|awk &#39;{print $2}&#39;` command 2:
svn add . --force Adding specific files to subversion:
svn add file1 file2 folder1 path/to/folder2 Commit specific folder in svn:
svn ci -m &amp;quot;commit message&amp;quot; file1 file2 folder1 path/to/folder2  Publish Date: 2014-10-12
 </description>
    </item>
    
    <item>
      <title>The Netflix Simian Army: reliability, security, resiliency and recoverability</title>
      <link>https://majdarbash.github.io/random/the-netflix-simian-army/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/the-netflix-simian-army/</guid>
      <description>Along with price and scalability, redundancy and fault-tolerance are possibly the most important triggers driving cloud migration. The cloud architecture should allow failure without affecting the availability of the entire system. We want to be able to test the failure scenarios.  Chaos Monkey  Randomly disables production instances Testing ability to survive the failure without overall impact on the service Leads to building automatic recovery mechanism to deal with system failures  Latency Monkey  Induces artificial delays to RESTful client-server communication layer to simulate service degradation.</description>
    </item>
    
    <item>
      <title>Travis CI Review</title>
      <link>https://majdarbash.github.io/random/travis-ci/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/travis-ci/</guid>
      <description>Is Travis CI a good CI tool? Travis CI is a very popular and widely used tool. I was personally using Travis for quite a while and had a good experience.
There are few things you should consider before starting with Travis. It&amp;rsquo;s very easy to start with Travis. I cannot imagine a faster integration with a CI tool.
All you have to do in order to start is to add your github repo to travis.</description>
    </item>
    
    <item>
      <title>Ubuntu Server clock synchronisation using NTP</title>
      <link>https://majdarbash.github.io/random/ubuntu-server-clock-synchronisation-using-ntpd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/ubuntu-server-clock-synchronisation-using-ntpd/</guid>
      <description>NTP is Network Time Protocol. This protocol is used for clock synchronisation between computer systems. NTP is one of the oldest protocols which are still used on the Internet.
The scenario below explains the use of NTP:
While the server is running, the system clock will gradually slow or run faster which will lead to clock misalignment. Whether you are running multiple systems over a load balancer, or just multiple systems in parallel, it&amp;rsquo;s very important to make sure that they are all on the same clock, interpreting and processing the records with the same current time.</description>
    </item>
    
    <item>
      <title>Ubuntu Terminal - adding user with SSH access</title>
      <link>https://majdarbash.github.io/random/create-user-using-terminal-ubuntu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/create-user-using-terminal-ubuntu/</guid>
      <description>Objective In the following example I&amp;rsquo;m doing the following
 create a new user using ubuntu terminal add my public key to authorized keys add user to sudoers (to be able to use sudo) enable ssh access for this user  Scripts # creating user adduser [username]
adding user to sudo (administrative privelleges) visudo
search for a line &amp;ldquo;root ALL=(ALL:ALL) ALL&amp;rdquo; and add a new line there [username] ALL=(ALL:ALL) ALL</description>
    </item>
    
    <item>
      <title>What is Captcha? How does it work?</title>
      <link>https://majdarbash.github.io/random/how-captcha-works/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/how-captcha-works/</guid>
      <description>In this article I&amp;rsquo;m explaining the generic concept of captcha in technical and non-technical terms, what are the possible threats of insecure captcha and how to make sure the captcha is secure enough.
CAPTCHA is defined as a Completely Automated Public Turing test. The main purpose of captcha is to distinguish automated requests from natural human behavior.
By using the visual ability of people to distinguish patterns in the images, we can distinguish humans from the computers and bad bots which are trying to flood our databases.</description>
    </item>
    
  </channel>
</rss>