<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>form class on My New Hugo Site</title>
    <link>http://localhost:1313/tags/form-class/</link>
    <description>Recent content in form class on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://localhost:1313/tags/form-class/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Symfony 3: Forms</title>
      <link>http://localhost:1313/symfony/symfony-forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/symfony/symfony-forms/</guid>
      <description>The code-snippets in this article are obtained from:Â https://symfony.com/doc/current/forms.html
1) Installation
composer require symfony/form 2) Building form in controller
&amp;lt;?php // src/Entity/Task.php namespace App\Entity; class Task { protected $task; protected $dueDate; public function getTask() { return $this-&amp;gt;task; } public function setTask($task) { $this-&amp;gt;task = $task; } public function getDueDate() { return $this-&amp;gt;dueDate; } public function setDueDate(\DateTime $dueDate = null) { $this-&amp;gt;dueDate = $dueDate; } } &amp;lt;?php // src/Controller/DefaultController.php namespace App\Controller; use App\Entity\Task; use Symfony\Bundle\FrameworkBundle\Controller\Controller; use Symfony\Component\HttpFoundation\Request; use Symfony\Component\Form\Extension\Core\Type\TextType; use Symfony\Component\Form\Extension\Core\Type\DateType; use Symfony\Component\Form\Extension\Core\Type\SubmitType; class DefaultController extends Controller { public function new(Request $request) { // creates a task and gives it some dummy data for this example  $task = new Task(); $task-&amp;gt;setTask(&amp;#39;Write a blog post&amp;#39;); $task-&amp;gt;setDueDate(new \DateTime(&amp;#39;tomorrow&amp;#39;)); $form = $this-&amp;gt;createFormBuilder($task) -&amp;gt;add(&amp;#39;task&amp;#39;, TextType::class) -&amp;gt;add(&amp;#39;dueDate&amp;#39;, DateType::class) -&amp;gt;add(&amp;#39;save&amp;#39;, SubmitType::class, array(&amp;#39;label&amp;#39; =&amp;gt; &amp;#39;Create Task&amp;#39;)) -&amp;gt;getForm(); $form-&amp;gt;handleRequest($request); if ($form-&amp;gt;isSubmitted() &amp;amp;amp;&amp;amp;amp; $form-&amp;gt;isValid()) { // $form-&amp;gt;getData() holds the submitted values  // but, the original `$task` variable has also been updated  $task = $form-&amp;gt;getData(); // .</description>
    </item>
    
  </channel>
</rss>