<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>migration on My New Hugo Site</title>
    <link>https://majdarbash.github.io/tags/migration/</link>
    <description>Recent content in migration on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://majdarbash.github.io/tags/migration/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to transfer a Wordpress site from one domain to another?</title>
      <link>https://majdarbash.github.io/random/transferring-wordpress-one-domain-another/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/random/transferring-wordpress-one-domain-another/</guid>
      <description>Explanation Other than uploading your wordpress sites to the new domain, you will need to do some changes in your database. Therefore, when you want to move the wordpress website to a new domain, you will find out that existing database records are still pointing at the old domain. So how do we properly migrate our wordpress site to the new domain name?
I have seen a lot of developers going straight to the database and updating records to a new domain.</description>
    </item>
    
    <item>
      <title>Migrating Applications Running Relational Databases to AWS: Best Practices Guide (2019)</title>
      <link>https://majdarbash.github.io/aws-posts/migrating-applications-to-aws/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/aws-posts/migrating-applications-to-aws/</guid>
      <description>Migration Steps and Tools  Development Environment Setup Prerequisites Step 1: Migration Assessment Step 2: Schema Conversion Step 3: Conversion of Embedded SQL and Application Code Step 4: Data Migration Step 5: Testing Converted Code Step 6: Data Replication Step 7: Deployment to AWS and Go Live   Best Practices  Migration Steps and Tools  Migration assessment analysis Schema conversion to target database platform SQL statement and application code conversion Data migration Testing of converted database and application code Setting up replication and failover scenarios for data migration to the target platform Setting up monitoring for a new production environment and go live with the target environment  Tools to automate migration steps:</description>
    </item>
    
  </channel>
</rss>