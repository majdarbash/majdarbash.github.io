<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>artificial intelligence on My New Hugo Site</title>
    <link>https://majdarbash.github.io/tags/artificial-intelligence/</link>
    <description>Recent content in artificial intelligence on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://majdarbash.github.io/tags/artificial-intelligence/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>What are Neural Networks? Why do we use them?</title>
      <link>https://majdarbash.github.io/ml-neural-networks/neural-networks-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/ml-neural-networks/neural-networks-overview/</guid>
      <description>Why do we use neural networks? Neural networks help us solve a lot of complicated problems when there&amp;rsquo;s no clear way to solve it. Sometimes problems can be complicated enough where we don&amp;rsquo;t know how to solve it, or solving them in conventional way will lead to very complicated algorithms which cannot adapt to changes.
Neural networks play essential role in acting like human brain - helping us solving problems which we are good at: speech recognition, object recognition, pattern recognition, classification, etc&amp;hellip;</description>
    </item>
    
    <item>
      <title>Neural Networks: Supervised, Unsupervised &amp; Reinforcement Learning Types of Learning</title>
      <link>https://majdarbash.github.io/ml-neural-networks/neural-networks-types-of-learning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/ml-neural-networks/neural-networks-types-of-learning/</guid>
      <description>There are 3 types of learning
 Supervised learning Reinforcement learning Unsupervised learning  Supervised Learning In supervised learning we try to predict an output when given an input vector. Input and target are clear in supervised learning.
Regression - target ouptut is a real numbers or a vector of real numbers
Classification - target output is a class label
Model-class is a function:
\begin{equation} y = f(x; W) \end{equation}</description>
    </item>
    
    <item>
      <title>Python 2.7: Setting up Neural Network with PyBrain</title>
      <link>https://majdarbash.github.io/ml-neural-networks/machine-learning-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/ml-neural-networks/machine-learning-python/</guid>
      <description>Today, I&amp;rsquo;m experimenting machine learning concepts in python. For this purchase I&amp;rsquo;m using PyBrain. If you would like to have a better idea about Python, I suggest having a quick glance at posts 1-10 in Python category.
PyBrain is a Machine Learning library for Python. PyBrain stands for Python-Based Reinforcemnet Learning, Artificial Intelligence and Neural Network Library.
For complete guide on installation you can get complete details from:
http://pybrain.org/docs/
In the example below, based on pybrain.</description>
    </item>
    
    <item>
      <title>1.1 - Genetics Algorithm - Algorithm Overview</title>
      <link>https://majdarbash.github.io/genetic-algorithm/01-algorithm-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/genetic-algorithm/01-algorithm-overview/</guid>
      <description>1.1.1 – Introduction 
Genetic Algorithm is a directed search algorithms based on the mechanics of biological evolution developed by John Holland, University of Michigan (1970’s) to understand the adaptive processes of natural systems and design artificial systems software that retains the robustness of natural systems this algorithms provide efficient, effective techniques for optimization and machine learning applications so it is widely used today in business, scientific and engineering circles.</description>
    </item>
    
    <item>
      <title>1.2 - Genetics Algorithm - Problem Specification</title>
      <link>https://majdarbash.github.io/genetic-algorithm/02-problem-specification/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/genetic-algorithm/02-problem-specification/</guid>
      <description>1.2.1 - Introduction We have a set of teachers who needs a schedule for a set of subjects over a set of periods, this schedule must take into account characteristics of periods of week, the limited availability of teacher and rooms, and some constraints which should be fulfilled.
The problem of assigning teachers to subjects and groups for timetabling problem has been studied by many authors. Tillet (1975) was the first to address it, using an integer linear programming model.</description>
    </item>
    
    <item>
      <title>1.3 - Genetics Algorithm - User Manual</title>
      <link>https://majdarbash.github.io/genetic-algorithm/03-user-manual/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/genetic-algorithm/03-user-manual/</guid>
      <description>1.3.1 - Operation Specification The program should be executed as follows:
Data entries for the program should be supplied within the tables in the “genalgo.accdb” database file. These tables contain the teacher definitions, teacher available times, subjects, teacher subjects mapping, rooms and corresponding room types. From all these tables in the preprocessing stage, the groups and then the cells tables are created, which will be used then as an input to our program.</description>
    </item>
    
    <item>
      <title>1.4 - Genetics Algorithm - Future Vision for Optimality</title>
      <link>https://majdarbash.github.io/genetic-algorithm/04-future-vision-for-optimality/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://majdarbash.github.io/genetic-algorithm/04-future-vision-for-optimality/</guid>
      <description>We are proud to see amazing results for the timetabling problem. As stated in the section before, that the maximum time for satisfying essential hard constraints was 15 minutes. This time is good enough, but in worse cases, the performance will be worse of course. This is why we introduce a new area for improvement in future – we would consider that it may be really efficient if we define and implement new heuristics within the HeuristicSwitcher, which might help us a lot in finding solution faster.</description>
    </item>
    
  </channel>
</rss>